---
- hosts: K8Cluster
  remote_user: ubuntu
  become: yes
  become_user: root
  become_method: sudo

  tasks:
        - debug: msg="Installing K8s on {{inventory_hostname}}"
        - name: "Configuring DNS servers"
          script: "./scripts/updateDNS.sh {{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}} 192.168.42.1 192.168.42.1"

        - name: "Forcing update on hostname"
          command: "hostnamectl set-hostname {{inventory_hostname}}"

        - name: "disable swap"
          command: swapoff -a

        - name: "Installing Docker"
          script: ./scripts/docker_install.sh

        - name: "Uploading daemon.json"
          copy:
                  src: ./config/docker/daemon.json
                  dest: /etc/docker/daemon.json

        - name: "Updating Network Configuration"
          script: ./scripts/net_config.sh

        - name: "restarting docker service"
          command: service docker restart

        - name: "Installing Kubelet Kubeadm Kubectl"
          script: ./scripts/kubeadm_install.sh


- name: configuring K8master 
  hosts: K8master
  remote_user: ubuntu
  tasks:
        - name: "Initializing kubeadm"
          command: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=0.0.0.0

        - command: mkdir /home/ubuntu/.kube

        - command: sudo cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config

        - command: sudo chown ubuntu:ubuntu /home/ubuntu/.kube/config

        - name: "Downloading Fannel"
          command: curl https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml -o /home/ubuntu/kube-flannel.yml
 
        - name: "Installing Fannel"
          command: kubectl apply -f /home/ubuntu/kube-flannel.yml

        - name: "testing if pod network is up"
          command: kubectl get pods --all-namespaces
          register: pod_net_test

        - debug: msg= "{{ pod_net_test.stdout }}"

        - name: "getting token"
          command: "kubeadm token create --print-join-command"
          register: join_cmd

- hosts: K8nodes
  remote_user: ubuntu
  become: yes
  become_user: root
  become_method: sudo
  tasks:
         - debug: msg="Joining {{inventory_hostname}} to cluster"
         - command: "{{ hostvars['K8master']['join_cmd']['stdout'] }}"

- hosts: Kubsetup
  remote_user: ubuntu
  become: yes
  become_user: root
  become_method: sudo
  tasks:
          - command: "docker run -d -p 192.168.42.206:5000:5000 --restart=always --name registry -v /mnt/registry:/var/lib/registry registry:2"
